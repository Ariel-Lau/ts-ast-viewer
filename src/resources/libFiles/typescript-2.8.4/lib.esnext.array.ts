export default {
    fileName: `/lib.esnext.array.d.ts`,
    // File text is copyright Microsoft Corporation and is distributed under the Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
    text: `/// <reference no-default-lib="true"/>\ninterface ReadonlyArray<T>{/**\n * Calls a defined callback function on each element of an array. Then, flattens the result into\n * a new array.\n * This is identical to a map followed by a flatten of depth 1.\n *\n * @param callback A function that accepts up to three arguments. The flatMap method calls the\n * callback function one time for each element in the array.\n * @param thisArg An object to which the this keyword can refer in the callback function. If\n * thisArg is omitted, undefined is used as the this value.\n */flatMap<U,This=undefined >(callback:(this :This,value:T,index:number ,array:T[])=>U|U[],thisArg?:This):U[]/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :ReadonlyArray<U[][][][]>|ReadonlyArray<ReadonlyArray<U[][][]>>|ReadonlyArray<ReadonlyArray<U[][]>[]>|ReadonlyArray<ReadonlyArray<U[]>[][]>|ReadonlyArray<ReadonlyArray<U>[][][]>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U[][]>>>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[][]>>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[][]>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>[]>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>[]>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>[]>>|ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>>>|ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>>>|ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[]>>|ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>[]>|ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>>>,depth:4):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :ReadonlyArray<U[][][]>|ReadonlyArray<ReadonlyArray<U>[][]>|ReadonlyArray<ReadonlyArray<U[]>[]>|ReadonlyArray<ReadonlyArray<U[][]>>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U[]>>>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U>[]>>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>[]>|ReadonlyArray<ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>>,depth:3):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :ReadonlyArray<U[][]>|ReadonlyArray<ReadonlyArray<U[]>>|ReadonlyArray<ReadonlyArray<U>[]>|ReadonlyArray<ReadonlyArray<ReadonlyArray<U>>>,depth:2):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :ReadonlyArray<U[]>|ReadonlyArray<ReadonlyArray<U>>,depth?:1):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :ReadonlyArray<U>,depth:0):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth. If no depth is provided, flatten method defaults to the depth of 1.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(depth?:number ):any [];}interface Array<T>{/**\n * Calls a defined callback function on each element of an array. Then, flattens the result into\n * a new array.\n * This is identical to a map followed by a flatten of depth 1.\n *\n * @param callback A function that accepts up to three arguments. The flatMap method calls the\n * callback function one time for each element in the array.\n * @param thisArg An object to which the this keyword can refer in the callback function. If\n * thisArg is omitted, undefined is used as the this value.\n */flatMap<U,This=undefined >(callback:(this :This,value:T,index:number ,array:T[])=>U|U[],thisArg?:This):U[]/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :U[][][][][][][][],depth:7):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :U[][][][][][][],depth:6):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :U[][][][][][],depth:5):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :U[][][][][],depth:4):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :U[][][][],depth:3):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :U[][][],depth:2):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :U[][],depth?:1):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(this :U[],depth:0):U[];/**\n * Returns a new array with all sub-array elements concatenated into it recursively up to the\n * specified depth. If no depth is provided, flatten method defaults to the depth of 1.\n *\n * @param depth The maximum recursion depth\n */flatten<U>(depth?:number ):any [];}`
};