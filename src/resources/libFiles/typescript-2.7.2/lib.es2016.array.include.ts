export default {
    fileName: `/lib.es2016.array.include.d.ts`,
    // File text is copyright Microsoft Corporation and is distributed under the Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
    text: `/// <reference no-default-lib="true"/>\ninterface Array<T>{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:T,fromIndex?:number):boolean;}interface ReadonlyArray<T>{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:T,fromIndex?:number):boolean;}interface Int8Array{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:number,fromIndex?:number):boolean;}interface Uint8Array{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:number,fromIndex?:number):boolean;}interface Uint8ClampedArray{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:number,fromIndex?:number):boolean;}interface Int16Array{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:number,fromIndex?:number):boolean;}interface Uint16Array{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:number,fromIndex?:number):boolean;}interface Int32Array{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:number,fromIndex?:number):boolean;}interface Uint32Array{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:number,fromIndex?:number):boolean;}interface Float32Array{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:number,fromIndex?:number):boolean;}interface Float64Array{/**\n * Determines whether an array includes a certain element, returning true or false as appropriate.\n * @param searchElement The element to search for.\n * @param fromIndex The position in this array at which to begin searching for searchElement.\n */includes(searchElement:number,fromIndex?:number):boolean;}`
};