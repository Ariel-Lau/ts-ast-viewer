export default {
    fileName: `/lib.es2015.generator.d.ts`,
    // File text is copyright Microsoft Corporation and is distributed under the Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
    text: `/// <reference no-default-lib="true"/>\n/// <reference lib="es2015.iterable" />\ninterface Generator<T=unknown,TReturn=any,TNext=unknown> extends Iterator<T,TReturn,TNext>{next(...args:[]|[TNext]):IteratorResult<T,TReturn>;return (value:TReturn):IteratorResult<T,TReturn>;throw (e:any):IteratorResult<T,TReturn>;[Symbol.iterator]():Generator<T,TReturn,TNext>;}interface GeneratorFunction{/** * Creates a new Generator object. * @param args A list of arguments the function accepts. */new (...args:any[]):Generator;/** * Creates a new Generator object. * @param args A list of arguments the function accepts. */(...args:any[]):Generator;/** * The length of the arguments. */readonly length:number;/** * Returns the name of the function. */readonly name:string;/** * A reference to the prototype. */readonly prototype:Generator;}interface GeneratorFunctionConstructor{/** * Creates a new Generator function. * @param args A list of arguments the function accepts. */new (...args:string[]):GeneratorFunction;/** * Creates a new Generator function. * @param args A list of arguments the function accepts. */(...args:string[]):GeneratorFunction;/** * The length of the arguments. */readonly length:number;/** * Returns the name of the function. */readonly name:string;/** * A reference to the prototype. */readonly prototype:GeneratorFunction;}`
};